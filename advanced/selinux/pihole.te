module pihole 1.0;

require {
        type var_log_t;
        type httpd_t;
	type httpd_sys_script_t;
        type dnsmasq_t;
        type init_t;
        type sysfs_t;
        type shadow_t;
        type pam_var_run_t;
        type sudo_db_t;
	type system_dbusd_var_run_t;
        class dir { search add_name write create getattr };
        class file { read write open create lock setattr getattr };
        class process { setrlimit };
        class netlink_audit_socket { create nlmsg_relay };
        class unix_stream_socket { ioctl };
	class sock_file { write };
        class capability { setgid setuid dac_override dac_read_search sys_resource audit_write };
}

#============= dnsmasq_t ==============
allow dnsmasq_t var_log_t:file { open setattr };

#============= httpd_t ==============
allow httpd_t var_log_t:file { read open };

#============= httpd_sys_script_t ==============
allow httpd_sys_script_t dnsmasq_t:dir getattr;
allow httpd_sys_script_t sysfs_t:file { read open getattr };
allow httpd_sys_script_t pam_var_run_t:dir { write create add_name };
allow httpd_sys_script_t pam_var_run_t:file { read write open create lock getattr };
allow httpd_sys_script_t self:capability { setgid setuid dac_override dac_read_search sys_resource audit_write };
allow httpd_sys_script_t self:netlink_audit_socket { create nlmsg_relay };
allow httpd_sys_script_t sudo_db_t:dir { search getattr };
allow httpd_sys_script_t shadow_t:file { read open create getattr };
allow httpd_sys_script_t self:process setrlimit;
allow httpd_sys_script_t init_t:unix_stream_socket { ioctl };
allow httpd_sys_script_t system_dbusd_var_run_t:sock_file { write };
